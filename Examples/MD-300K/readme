



#
#  generate  new movie.xyz:
#  1) everything in atomic units 
#  2) include   dQ/dt 
#  3)  entries:   xyz,  Q, dQ, velocities  are  as average  between steps, example:    x(i+0.5) =  0.5(x(i)+x(i+1))  
#  4) Two versions of velocities:  (1)  average of  velocityr  [vx(i)+v(i+1)] ,   (2)  from averaged position [ (x(i+1)-x(i+1))/dt ]

  sh do-movie-au   >  movie-au.xyz  

#
#  calculate autocorrelation  function
#
#   We follow  Voth's approach:
#  J. Chem. Phys., Vol. 116, pp. 737-746 (2002)
#  
#  < du/dt(0) |  du/dt(t) > , 
#        where
#   du/dt = SUM_iatoms { dQ/dt* R + q* dR/dt }   
#         = SUM_iatoms { dQ/dt* R + q* Vel   }
#
#                             

   Nat=5
   sh    do-autocorr   $Nat  movie-au.xyz    >   autocorr-all.dat


#
#  prepare input file for  fft 
#
#     xdQ,               ydQ,                 zdQ,                 vxQ,                vyQ,                vzQ,                   SUM   "
#
#  remove blank lines:  if (NF!=0)  
#
   dt=0.5
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; printf(" %s  %s  \n", NR*dt/aufs, $1 )}'   | tail -n +1     >   x-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $1 )}'   | tail -n +1  >  x-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $2 )}'   | tail -n +1  >  y-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $3 )}'   | tail -n +1  >  z-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $4 )}'   | tail -n +1  >  vx-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $5 )}'   | tail -n +1  >  vy-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $6 )}'   | tail -n +1  >  vz-dQ.dat
   cat   autocorr-all.dat | grep -v "#" | awk  -v dt=$dt  '{au2fs=0.02418884326505; time=NR*dt/au2fs; if(NF!=0) printf(" %20.10f   %s  \n",time, $7 )}'   | tail -n +1  >  du.dat


 octave   ./octave-fft1d.m  x-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-xdQ.dat 
 octave   ./octave-fft1d.m  y-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-ydQ.dat 
 octave   ./octave-fft1d.m  z-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-zdQ.dat 
 octave   ./octave-fft1d.m vx-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-vxdQ.dat 
 octave   ./octave-fft1d.m vy-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-vydQ.dat 
 octave   ./octave-fft1d.m vz-dQ.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-vzdQ.dat 
 octave   ./octave-fft1d.m    du.dat  |tail -n+1 |sed -n "/period =/,$ p"  > w-du.dat 


# rotate 
tail -n+2 w-xdQ.dat  |  ./rotate_fft.py   >  w2-xdQ.dat  
tail -n+2 w-ydQ.dat  |  ./rotate_fft.py   >  w2-ydQ.dat  
tail -n+2 w-zdQ.dat  |  ./rotate_fft.py   >  w2-zdQ.dat  
tail -n+2 w-vxdQ.dat |  ./rotate_fft.py   >  w2-vxdQ.dat 
tail -n+2 w-vydQ.dat |  ./rotate_fft.py   >  w2-vydQ.dat 
tail -n+2 w-vzdQ.dat |  ./rotate_fft.py   >  w2-vzdQ.dat 
tail -n+2 w-du.dat   |  ./rotate_fft.py   >  w2-du.dat   



exit
# plot now 

paste xw2.dat yw2.dat zw2.dat > freqs.dat

gnuplot ./gnuscript-freqs

